using System;

using Microsoft.Build.Framework;
using Microsoft.Build.Utilities;

using RSML.Evaluation;
using RSML.Exceptions;


namespace RSML.Compiler
{

	/// MSBuild task that evaluates RSML at compile-time.
	public class RsmlCompileTask : Task
	{

		/// <summary>
		/// The RSML document to compile.
		/// </summary>
		[Required]
		public string RsmlDocument { get; set; } = "";

		/// <summary>
		/// The name of the class in which the result will be stored.
		/// It's recommended to change this value if you're compiling several RSML documents.
		/// </summary>
		public string ClassName { get; set; } = "CompiledRsml";

		/// <summary>
		/// The namespace in which the result will be stored.
		/// Default and recommended value is <c>RSML.Generated</c>.
		/// </summary>
		public string Namespace { get; set; } = "RSML.Generated";

		/// <summary>
		/// The task output, the generated C# code.
		/// </summary>
		[Output]
		public string GeneratedCSharpCode { get; set; } = "";

		/// <inheritdoc />
		public override bool Execute()
		{

			try
			{

				RsmlDocument = String.Join(Environment.NewLine, RsmlDocument.Split(';'));

				var result = new RsEvaluator(RsmlDocument).Evaluate();
				var newExp = result.WasMatchFound ? $"new(\"{result.MatchValue!}\")" : "new()";

				GeneratedCSharpCode = $$"""
										// Generated by RSML's RsmlCompileTask
										// RedSeaMarkupLanguage by OceanApocalypseStudios

										using RSML.Evaluation;

										namespace {{Namespace}}
										{
											public static class {{ClassName}}
											{
												 public static EvaluationResult Result => {{newExp}};
											}
										}
										""";

				return true;

			}

			catch (UserRaisedException)
			{

				Log.LogError("Error-throwing operations are not allowed in compiled RSML.");

				return false;

			}

			catch (InvalidRsmlSyntax e)
			{

				Log.LogError($"Cannot compile invalid RSML syntax. {e.Message}");

				return false;

			}

			catch (Exception e)
			{

				Log.LogError($"An unknown error caused the task to be aborted. {e.Message}");

				return false;

			}

		}

	}

}
