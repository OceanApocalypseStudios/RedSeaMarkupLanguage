name: .NET Release Workflow for Windows (x64)

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Step 1
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0'

      # Step 3
      - name: Restore dependencies
        run: dotnet restore

      # Step 4
      - name: Build the project
        run: dotnet build RSML.CLI/RSML.CLI.csproj --configuration Release --output ./bin

      # Step 5
      - name: Run tests
        run: dotnet test
       
      # Step 6
      - name: Create ZIP archives
        run: |
          cd ./bin
          powershell Compress-Archive -Path * -DestinationPath "../RSML_CLI.zip"

      # Step 7
      - name: Create TAR.GZ archives
        run: |
          cd ./bin
          tar -czvf "../RSML_CLI.tar.gz" *
          cd ..

      # Step 8
      - name: Pack NuGet Package
        run: dotnet pack RSML/RSML.csproj --configuration Release --output ./nupkgs

      # Step 9
      - name: Create Release
        uses: softprops/action-gh-release@v1

        with:
          files: |
              ./*.zip
              ./*.tar.gz
              ./nupkgs/*.nupkg

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Step 10
      - name: Push to NuGet
        shell: pwsh
        run: |
          $nupkgs = Get-ChildItem -Path ./nupkgs -Filter *.nupkg
          foreach ($pkg in $nupkgs) {
            dotnet nuget push $pkg.FullName --api-key $env:NUGET_API_KEY --source https://api.nuget.org/v3/index.json
          }

